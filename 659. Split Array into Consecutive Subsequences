Description:
You are given an integer array sorted in ascending order (may contain duplicates), you need to split them into several subsequences, where each subsequences consist of at least 3 consecutive integers. Return whether you can make such a split.
Example 1:
Input: [1,2,3,3,4,5]
Output: True
Explanation:
You can split them into two consecutive subsequences : 
1, 2, 3
3, 4, 5



Solution:
class Solution:
    def isPossible(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        left = collections.Counter(nums)
        previous=collections.Counter()
        for i in nums:
            if not left[i]: continue
            left[i] -= 1
            if previous[i-1]>0:
                previous[i-1]-=1
                previous[i]+=1
            elif left[i + 1] and left[i + 2]:
                left[i + 1] -= 1
                left[i + 2] -= 1
                previous[i+2]+=1
            else:
                return False
        return True 
